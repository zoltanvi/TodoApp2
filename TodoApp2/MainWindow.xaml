<Window
    x:Class="TodoApp2.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TodoApp2"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Name="TodoApp2Window"
    Title="TodoApp"
    Width="380"
    Height="500"
    MinWidth="{Binding WindowMinimumWidth}"
    MinHeight="{Binding WindowMinimumHeight}"
    AllowsTransparency="True"
    AutomationProperties.AutomationId="TodoApp2Window"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <!--  Outer border with the drop shadow margin  -->
                        <Border CornerRadius="{Binding ApplicationViewModel.ApplicationSettings.WindowCornerRadius, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:SingleCornerRadiusConverter}}">
                            <Border.Clip>
                                <RectangleGeometry RadiusX="{Binding CornerRadius.TopLeft, RelativeSource={RelativeSource AncestorType={x:Type Border}}}" RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{local:WidthAndHeightToRectConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type Border}}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType={x:Type Border}}" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>


                            <!--  Main window outline  -->
                            <Grid>

                                <!--  Outer dragging border  -->

                                <Border
                                    Panel.ZIndex="2"
                                    BorderBrush="{DynamicResource ApplicationBorderBrush}"
                                    BorderThickness="0.7"
                                    CornerRadius="{Binding ApplicationViewModel.ApplicationSettings.WindowCornerRadius, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:SingleCornerRadiusConverter}}" />

                                <!--  Window border and drop shadow  -->
                                <Border Background="{DynamicResource TaskPageBackgroundBrush}" CornerRadius="{Binding ApplicationViewModel.ApplicationSettings.WindowCornerRadius, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:SingleCornerRadiusConverter}}">
                                    <!--<Border.Effect>
                                            <DropShadowEffect
                                                ShadowDepth="2"
                                                Opacity="0.8"
                                                BlurRadius="4" />
                                        </Border.Effect>-->

                                    <Grid>
                                        <Grid.RowDefinitions>

                                            <!--  Title Bar  -->
                                            <RowDefinition Height="{Binding TitleBarGridHeight, FallbackValue=35}" />
                                            <!--  Window Content  -->
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <!--  Title Bar  -->
                                        <Border
                                            Grid.Column="0"
                                            Panel.ZIndex="0"
                                            Background="{DynamicResource TitleBarBackgroundBrush}">
                                            <!--<Border.CornerRadius>
                                                <MultiBinding Converter="{local:CornerRadiusConverter}" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding
                                                        Path="ApplicationViewModel.ApplicationSettings.WindowCornerRadius"
                                                        Source="{x:Static local:ViewModelLocator.Instance}"
                                                        NotifyOnSourceUpdated="True" />
                                                    <Binding
                                                        Path="ApplicationViewModel.ApplicationSettings.WindowCornerRadius"
                                                        Source="{x:Static local:ViewModelLocator.Instance}"
                                                        NotifyOnSourceUpdated="True" />
                                                </MultiBinding>
                                            </Border.CornerRadius>-->

                                            <Grid>
                                                <Grid.ColumnDefinitions>

                                                    <!--  Side menu button column  -->
                                                    <ColumnDefinition Width="Auto" />
                                                    <!--  Maybe title  -->
                                                    <ColumnDefinition Width="*" />
                                                    <!--  Windows Button  -->
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <!--  Side menu button  -->
                                                <Button
                                                    Name="SideMenuButton"
                                                    Grid.Column="0"
                                                    AutomationProperties.AutomationId="SideMenuButton"
                                                    Command="{Binding ApplicationViewModel.ToggleSideMenuCommand, Source={x:Static local:ViewModelLocator.Instance}}"
                                                    Content="{DynamicResource SegoeIconMenu}"
                                                    Style="{DynamicResource ButtonTitleBarStyle}">

                                                    <Button.Resources>
                                                        <Style TargetType="Border">
                                                            <!--<Setter Property="CornerRadius">
                                                                <Setter.Value>
                                                                    <MultiBinding Converter="{local:CornerRadiusConverter}" UpdateSourceTrigger="PropertyChanged">
                                                                        <Binding Path="ApplicationViewModel.ApplicationSettings.WindowCornerRadius" Source="{x:Static local:ViewModelLocator.Instance}" />
                                                                    </MultiBinding>
                                                                </Setter.Value>
                                                            </Setter>-->
                                                        </Style>
                                                    </Button.Resources>
                                                </Button>

                                                <!--  Here could be the window title  -->

                                                <!--  Window buttons  -->
                                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                    <Button
                                                        x:Name="MinimizeWindow"
                                                        AutomationProperties.AutomationId="MinimizeWindow"
                                                        Command="{Binding MinimizeCommand}"
                                                        Content="{DynamicResource SegoeIconMinimizeWindow}"
                                                        Style="{DynamicResource ButtonTitleBarStyle}"
                                                        FontSize="10" />
                                                    <Button
                                                        x:Name="MaximizeWindow"
                                                        AutomationProperties.AutomationId="MaximizeWindow"
                                                        Command="{Binding MaximizeCommand}"
                                                        Content="{DynamicResource SegoeIconMaximizeWindow}"
                                                        Style="{DynamicResource ButtonTitleBarStyle}"
                                                        FontSize="10" />
                                                    <Button
                                                        Name="CloseWindow"
                                                        AutomationProperties.AutomationId="CloseWindow"
                                                        Command="{Binding CloseCommand}"
                                                        Content="{DynamicResource SegoeIconCloseWindow}"
                                                        Style="{DynamicResource ButtonTitleBarCloseWindowStyle}"
                                                        FontSize="12">
                                                        <Button.Resources>
                                                            <Style TargetType="Border">
                                                                <!--<Setter Property="CornerRadius">
                                                                    <Setter.Value>
                                                                        <MultiBinding Converter="{local:CornerRadiusConverter}">
                                                                            <Binding Path="ApplicationViewModel.ApplicationSettings.NoRadius" Source="{x:Static local:ViewModelLocator.Instance}" />
                                                                            <Binding Path="ApplicationViewModel.ApplicationSettings.WindowCornerRadius" Source="{x:Static local:ViewModelLocator.Instance}" />
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>-->
                                                            </Style>
                                                        </Button.Resources>

                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                        </Border>

                                        <!--  Page content  -->
                                        <Border
                                            Grid.Row="1"
                                            Padding="{Binding InnerContentPadding}"
                                            ClipToBounds="True">
                                            <ContentPresenter AutomationProperties.AutomationId="MainPageContent" Content="{TemplateBinding Content}" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="{Binding TitleBarHeight}"
            GlassFrameThickness="0"
            CornerRadius="0"
            ResizeBorderThickness="{Binding ResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <Border>
        <Grid>

            <!--  Current page  -->

            <Frame
                local:NoFrameHistory.Value="True"
                AutomationProperties.AutomationId="CurrentPage"
                Content="{Binding}"
                DataContext="{Binding ApplicationViewModel.CurrentPage, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:ApplicationPageValueConverter}}" />

            <!--  Overlay background  -->
            <local:OverlayBackgroundControl AutomationProperties.AutomationId="OverlayBackgroundControl" />


            <!--  Navigator menu panel  -->
            <Border>
                <local:SideMenuControl local:AnimateSlideInFromLeftProperty.Value="{Binding ApplicationViewModel.SideMenuVisible, Source={x:Static local:ViewModelLocator.Instance}}" AutomationProperties.AutomationId="SideMenuControl">

                    <!--  Side menu page  -->

                    <Frame
                        local:NoFrameHistory.Value="True"
                        AutomationProperties.AutomationId="SideMenuPage"
                        Content="{Binding}"
                        DataContext="{Binding ApplicationViewModel.SideMenuPage, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:ApplicationPageValueConverter}}" />

                </local:SideMenuControl>
            </Border>

            <!--  Message line  -->
            <Grid VerticalAlignment="Top" local:AnimateSlideInFromTopProperty.Value="{Binding MessageService.MessageLineVisible, Source={x:Static local:ViewModelLocator.Instance}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>
                <Border
                    Margin="10"
                    Grid.Column="1"
                    MaxHeight="100"
                    CornerRadius="2"
                    SnapsToDevicePixels="True"
                    Background="{Binding MessageService.BackgroundColor, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:StringRGBToBrushConverter}}">
                    <TextBlock
                        Margin="10 0"
                        TextWrapping="Wrap"
                        FontSize="{StaticResource FontSizeMedium}"
                        FontFamily="Segoe UI"
                        Text="{Binding MessageService.Message, Source={x:Static local:ViewModelLocator.Instance}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{Binding MessageService.TextColor, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:StringRGBToBrushConverter}}" />
                </Border>
            </Grid>

        </Grid>
    </Border>
</Window>