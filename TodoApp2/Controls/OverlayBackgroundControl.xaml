<UserControl x:Class="TodoApp2.OverlayBackgroundControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:TodoApp2"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             Name="OverlayBackground"
             d:DesignHeight="500"
             d:DesignWidth="350"
             AutomationProperties.AutomationId="OverlayBackground"
             mc:Ignorable="d">
    <UserControl.Template>
        <ControlTemplate TargetType="UserControl">

            <Grid>
                <!--  Overlay background is behind the content  -->
                <Border x:Name="OverlayBackgroundBorder"
                        AutomationProperties.AutomationId="OverlayBackgroundBorder"
                        Background="{DynamicResource OverlayBackgroundBrush}"
                        Visibility="{Binding OverlayPageService.OverlayBackgroundVisible, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Behaviors:Interaction.Triggers>
                        <Behaviors:EventTrigger EventName="MouseDown">
                            <Behaviors:InvokeCommandAction Command="{Binding OverlayPageService.BackgroundClickedCommand, Source={x:Static local:ViewModelLocator.Instance}}" />
                        </Behaviors:EventTrigger>
                    </Behaviors:Interaction.Triggers>
                </Border>

                <!--  Overlay page is in front of the background  -->
                <!--
                    This is important since we only want to handle the
                    mousedown event if the background is clicked and not the content area
                -->
                <local:PageHost local:AnimateGrowProperty.Value="{Binding ApplicationViewModel.OverlayPageVisible, Source={x:Static local:ViewModelLocator.Instance}}"
                                AutomationProperties.AutomationId="OverlayPageContent"
                                CurrentPage="{Binding ApplicationViewModel.OverlayPage, Source={x:Static local:ViewModelLocator.Instance}}"
                                CurrentPageViewModel="{Binding ApplicationViewModel.OverlayPageViewModel, Source={x:Static local:ViewModelLocator.Instance}}" />
            </Grid>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>