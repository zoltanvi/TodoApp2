<UserControl
    x:Class="TodoApp2.RichTextEditorControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TodoApp2"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    mc:Ignorable="d"
    d:DesignHeight="450"
    x:Name="RichTextEditorUC"
    d:DesignWidth="800">
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border
                x:Name="ToolBarBorder"
                Grid.Row="0"
                Background="Transparent"
                Grid.Column="1"
                IsEnabled="{Binding ElementName=RichTextEditorUC, Path=IsReadOnly, Converter={StaticResource boolNegatedConverter}}">
                <DockPanel>
                    <WrapPanel
                        Visibility="{Binding IsChecked, ElementName=IsEditorOpenToggle, Converter={StaticResource boolToVisibilityConverter}}"
                        Background="#00ffffff"
                        DockPanel.Dock="Top"
                        ToolBarTray.IsLocked="True">

                        <ToggleButton
                            Command="{Binding SetBoldCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconBold}"
                            IsChecked="{Binding IsSelectionBold, ElementName=PART_TextEditor}"
                            Style="{DynamicResource TextEditorToggleButtonStyle}"
                            ToolTip="Bold (Ctrl + B)" />
                        <ToggleButton
                            Command="{Binding SetItalicCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconItalic}"
                            IsChecked="{Binding IsSelectionItalic, ElementName=PART_TextEditor}"
                            Style="{DynamicResource TextEditorToggleButtonStyle}"
                            ToolTip="Italic (Ctrl + I)" />
                        <ToggleButton
                            Command="{Binding SetUnderlinedCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconUnderlined}"
                            IsChecked="{Binding IsSelectionUnderlined, ElementName=PART_TextEditor}"
                            Style="{DynamicResource TextEditorToggleButtonStyle}"
                            ToolTip="Underline (Ctrl + U)" />

                        <Button
                            Command="{Binding SetSmallFontSizeCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconFontSize}"
                            Style="{DynamicResource TextEditorButtonStyle}"
                            FontSize="{Binding UIScaler.FontSize.Smaller}"
                            ToolTip="Small font" />
                        <Button
                            Command="{Binding SetMediumFontSizeCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconFontSize}"
                            Style="{DynamicResource TextEditorButtonStyle}"
                            ToolTip="Medium font" />
                        <Button
                            Command="{Binding SetBigFontSizeCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconFontSize}"
                            Style="{DynamicResource TextEditorButtonStyle}"
                            FontSize="{Binding UIScaler.FontSize.Larger}"
                            ToolTip="Big font" />

                        <Button
                            Command="{Binding IncreaseFontSizeCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconFontSizeIncrease}"
                            Style="{DynamicResource TextEditorButtonStyle}"
                            ToolTip="Increase size (Ctrl + [OemCloseBrackets])" />
                        <Button
                            Command="{Binding DecreaseFontSizeCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconFontSizeDecrease}"
                            Style="{DynamicResource TextEditorButtonStyle}"
                            ToolTip="Decrease size (Ctrl + [OemOpenBrackets])" />

                        <Button
                            Command="{Binding MonospaceCommand, ElementName=PART_TextEditor}"
                            Content="M"
                            Style="{DynamicResource TextEditorButtonStyle}"
                            FontFamily="{DynamicResource UIFont}"
                            FontWeight="Bold"
                            Padding="5 5 5 0"
                            ToolTip="Monospace font" />

                        <Button
                            Command="{Binding ResetFormattingCommand, ElementName=PART_TextEditor}"
                            Content="{DynamicResource SegoeIconDeleteFormatting}"
                            Style="{DynamicResource TextEditorButtonStyle}"
                            ToolTip="Reset all formatting (Ctrl + H)" />

                        <local:ColorPickerComboBox
                            AppliedColor="{Binding TextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Focusable="False"
                            ItemContainerStyle="{StaticResource ColorPickerItemContainerStyle}"
                            ItemTemplate="{StaticResource ColorPickerItemTemplate}"
                            ItemsSource="{Binding ColorListProvider.Items, Source={x:Static local:ViewModelLocator.Instance}}"
                            Style="{DynamicResource TaskColorPickerButtonStyle}"
                            ToolTip="Change color (Ctrl + G)" />

                    </WrapPanel>
                </DockPanel>
            </Border>

            <!--  Main content  -->
            <Border
                x:Name="border"
                Grid.Row="1"
                Grid.Column="1"
                Margin="0 0 10 0"
                Background="Transparent"
                SnapsToDevicePixels="True">

                <!--
                    IMPORTANT: FocusSetter Attached property must be
                    after Visibility property (if defined) in order to work!
                    
                    Focusable property is needed to exit edit mode on enter keypress.
                -->
                <local:FormattableTextEditorBox
                    x:Name="PART_TextEditor"
                    RenderOptions.ClearTypeHint="Enabled"
                    DocumentContent="{Binding DocumentContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{DynamicResource ForegroundBrush}"
                    Style="{DynamicResource BaseRichTextBoxStyle}"
                    Opacity="{Binding TextOpacity}"
                    IsReadOnly="{Binding ElementName=RichTextEditorUC, Path=IsReadOnly}"
                    Background="Transparent"
                    EnterAction="{Binding EnterAction}"
                    Focusable="{Binding Focusable}"
                    local:FocusSetter.Value="{Binding NeedFocus}"
                    TextColor="{Binding TextColor}"
                    AcceptsTab="{Binding AcceptsTab}"
                    ScrollViewer.CanContentScroll="False"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Auto">

                    <Behaviors:Interaction.Triggers>
                        <Behaviors:EventTrigger EventName="LostFocus">
                            <Behaviors:InvokeCommandAction Command="{Binding LostFocusCommand}" />
                        </Behaviors:EventTrigger>
                    </Behaviors:Interaction.Triggers>

                    <Behaviors:Interaction.Behaviors>
                        <local:PutCaretAtTheEndRTBBehavior />
                    </Behaviors:Interaction.Behaviors>

                    <local:PushBindingManager.PushBindings>
                        <local:PushBinding
                            TargetProperty="IsEmpty"
                            Path="IsContentEmpty"
                            Mode="OneWayToSource" />
                    </local:PushBindingManager.PushBindings>

                </local:FormattableTextEditorBox>
            </Border>

            <!--  Editor toggle button  -->
            <Border
                Grid.RowSpan="2"
                Grid.Column="2"
                Width="{Binding UIScaler.TextEditorToggleWidth}"
                HorizontalAlignment="right"
                IsEnabled="{Binding ElementName=RichTextEditorUC, Path=IsReadOnly, Converter={StaticResource boolNegatedConverter}}">

                <Border.Visibility>
                    <MultiBinding>
                        <MultiBinding.Converter>
                            <local:BoolToVisibilityMultiValueConverter2 />
                        </MultiBinding.Converter>
                        <Binding Path="IsEditMode" />
                        <Binding Path="IsFocused" ElementName="PART_TextEditor" />
                    </MultiBinding>
                </Border.Visibility>

                <ToggleButton
                    x:Name="IsEditorOpenToggle"
                    Margin="0 2 0 0"
                    Foreground="{DynamicResource ForegroundBrush}"
                    IsChecked="{Binding IsToolbarOpen}"
                    Style="{DynamicResource TextEditorArrowToggleButtonStyle}" />
            </Border>

            <!--  Watermark text  -->
            <TextBlock
                x:Name="PART_placeholder"
                Grid.Row="1"
                Grid.Column="1"
                Margin="2 0 10 0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{DynamicResource PlaceholderBrush}"
                IsHitTestVisible="False"
                FontFamily="{Binding Path=ApplicationViewModel.ApplicationSettings.FontFamily, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource enumToFontFamilyConverter}}"
                FontSize="{Binding Path=ApplicationViewModel.ApplicationSettings.TaskFontSizeDouble, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource fontSizeScaler}}"
                Visibility="{Binding IsEmpty, ElementName=PART_TextEditor, Converter={StaticResource boolToVisibilityConverter}}"
                Text="{Binding WatermarkText}" />

        </Grid>
    </Grid>
</UserControl>
