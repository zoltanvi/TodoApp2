<UserControl x:Class="TodoApp2.TaskListItemControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:TodoApp2"
             xmlns:core="clr-namespace:TodoApp2.Core;assembly=TodoApp2.Core"
             xmlns:jas="clr-namespace:WPF.JoshSmith.ServiceProviders.UI" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d"
             MinHeight="46"
             x:Name="TaskListItemUC"
             d:DesignHeight="60" d:DesignWidth="350"
             >

    <Grid Background="{StaticResource ContentBackgroundBrush}">

        <Border Background="{Binding IsDone, Converter={local:BackgroundBrushConverter}}"
                Margin="16 3"
                CornerRadius="3"
                >
            
            <!--TODO: Make a fade animation instead of this-->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding HideColorPickerCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <Grid>
                <Grid.ColumnDefinitions>
                    <!--Color bar column-->
                    <ColumnDefinition Width="6" />
                    <!--Checkbox column-->
                    <ColumnDefinition Width="36" />
                    <!--Main content column, also the hidden buttons column-->
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--Color bar-->
                <Border Grid.Column="0"
                        CornerRadius="3 0 0 3"
                        Background="{Binding Color, Converter={local:StringRGBToBrushConverter}}" />

                <CheckBox Grid.Column="1"
                          IsChecked="{Binding IsDone}"
                          Command="{Binding Path=Tag.TaskIsDoneModifiedCommand, ElementName=TaskListItemUC}"
                          CommandParameter="{Binding DataContext, ElementName=TaskListItemUC}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center" Style="{StaticResource TaskCheckBoxStyle}" />

                <!--Main content-->
                <Grid Grid.Column="2" Margin="6">
                    <Grid.RowDefinitions>
                        <!--Task description row-->
                        <RowDefinition Height="*" />
                        <!--Timestamp row-->
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--Task description-->
                    
                    <!--Display formatted text-->
                    <TextBlock Name="TaskListItemDisplayText"
                        Grid.Row="0"
                        Visibility="{Binding IsEditMode, Converter={local:BoolToVisibilityNegatedConverter}}"
                        Style="{StaticResource TaskListItemDescriptionTextBlockStyle}"
                        Opacity="{Binding IsDone, Converter={local:BoolToOpacityConverter}}"
                        Text="{Binding Content, Mode=TwoWay, NotifyOnTargetUpdated=True}"
                        local:InputBindingsManager.FormatTextOnTargetUpdated="TextBlock.Text"
                               >
                        <TextBlock.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding EditItemCommand}" />
                        </TextBlock.InputBindings>
                    </TextBlock>
                    
                    <!--Text editor mode-->
                    <TextBox Grid.Row="0"
                             Visibility="{Binding IsEditMode, Converter={local:BoolToVisibilityConverter}}"
                             local:FocusSetter.Value="{Binding IsEditMode}"
                             Style="{StaticResource TaskListItemDescriptionTextBoxStyle}"
                             Opacity="{Binding IsDone, Converter={local:BoolToOpacityConverter}}"
                             Text="{Binding PendingEditContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             PreviewKeyDown="TextBox_PreviewKeyDown" 
                             >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding UpdateItemContentCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <!--Timestamp-->
                    <!--<TextBlock Grid.Row="1"
                               Text="2020-04-22 20:57"
                               Foreground="{StaticResource TimestampForegroundBrush}"
                               />-->
                </Grid>

                <!--Hidden buttons-->
                <Border Grid.Column="2"
                        x:Name="HoverButtonBorder"
                        Opacity="0"
                        Background="Transparent"
                        HorizontalAlignment="Right"
                        Visibility="{Binding IsEditMode, Converter={local:BoolToVisibilityNegatedConverter}}"
                        Width="100">
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="Border.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        From="0"
                                        To="1"
                                        Duration="0:0:0.35"
                                        Storyboard.TargetName="HoverButtonBorder"
                                        Storyboard.TargetProperty="(Opacity)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        From="1"
                                        To="0"
                                        Duration="0:0:0.15"
                                        Storyboard.TargetName="HoverButtonBorder"
                                        Storyboard.TargetProperty="(Opacity)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Border.Triggers>

                    <Border HorizontalAlignment="Right"
                            CornerRadius="0 5 5 0"
                            Background="{StaticResource TaskListItemHoverPanelBrush}"
                            Padding="10 0 0 0">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!--Calendar button-->
                            <Button Grid.Column="0"
                                Style="{StaticResource TaskItemButtonStyle}"
                                Content="{StaticResource SegoeIconDateTime}"
                                Command="{Binding OpenReminderCommand}" />
                            <!--Palette button-->
                            <Button Grid.Column="1"
                                Style="{StaticResource TaskItemButtonYellowStyle}"
                                Content="{StaticResource SegoeIconPalette}"
                                Command="{Binding ShowColorPickerCommand}" />
                            <!--Trash button-->
                            <Button Grid.Column="2"
                                Style="{StaticResource TaskItemButtonRedStyle}"
                                Content="{StaticResource SegoeIconTrash}"
                                Command="{Binding Path=Tag.DeleteTaskItemCommand, ElementName=TaskListItemUC}"
                                CommandParameter="{Binding DataContext, ElementName=TaskListItemUC}" />
                        </Grid>
                    </Border>
                </Border>

                <local:ColorPickerControl
                    Grid.Column="2"
                    HorizontalContentAlignment="Right"
                    Visibility="{Binding ColorPickerVisible, Converter={local:BoolToVisibilityConverter}}"
                    Margin="0 0 30 0" />
            </Grid>
        </Border>
    </Grid>
</UserControl>