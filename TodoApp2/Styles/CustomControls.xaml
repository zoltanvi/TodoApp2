<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
    xmlns:local="clr-namespace:TodoApp2"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!--  Time picker  -->
    <Style x:Key="TimePickerStyle" TargetType="{x:Type xctk:TimePicker}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonBorderBrush}" />
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl
                        Margin="0 0 3 0"
                        Content="{Binding}"
                        Focusable="False"
                        Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:TimePicker}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <xctk:ButtonSpinner
                            x:Name="PART_Spinner"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            AllowSpin="{TemplateBinding AllowSpin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                            Foreground="{TemplateBinding Foreground}"
                            IsTabStop="False"
                            ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                            <xctk:WatermarkTextBox
                                x:Name="PART_TextBox"
                                MinWidth="20"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AcceptsReturn="False"
                                Background="Transparent"
                                BorderThickness="0"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="True"
                                IsUndoEnabled="True"
                                TabIndex="{TemplateBinding TabIndex}"
                                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="NoWrap"
                                Watermark="{TemplateBinding Watermark}"
                                WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />

                            <xctk:ButtonSpinner.Style>
                                <Style TargetType="{x:Type xctk:ButtonSpinner}">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="IsTabStop" Value="True" />
                                    <Setter Property="Padding" Value="1" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                                                <Border
                                                    x:Name="Border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    SnapsToDevicePixels="True">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition x:Name="firstContentColumn" Width="*" />
                                                            <ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter
                                                            x:Name="contentPresenter"
                                                            Margin="{TemplateBinding Padding}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Content="{TemplateBinding Content}"
                                                            Focusable="False"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <Grid
                                                            x:Name="gridContent"
                                                            Grid.Column="1"
                                                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*" />
                                                                <RowDefinition Height="*" />
                                                            </Grid.RowDefinitions>
                                                            <RepeatButton
                                                                x:Name="PART_IncreaseButton"
                                                                IsTabStop="{TemplateBinding IsTabStop}"
                                                                Style="{DynamicResource RepeatButtonStyle}">

                                                                <RepeatButton.ContentTemplate>
                                                                    <DataTemplate>
                                                                        <Path
                                                                            Width="9"
                                                                            Height="5"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Data="M0,5L4.5,0.5 9,5 6,5 4.5,3.5 3,5z"
                                                                            Fill="{DynamicResource ForegroundBrush}"
                                                                            Focusable="False"
                                                                            SnapsToDevicePixels="True" />
                                                                    </DataTemplate>
                                                                </RepeatButton.ContentTemplate>
                                                            </RepeatButton>
                                                            <RepeatButton
                                                                x:Name="PART_DecreaseButton"
                                                                Grid.Row="1"
                                                                BorderThickness="1 1 0 0"
                                                                IsTabStop="{TemplateBinding IsTabStop}"
                                                                Style="{DynamicResource RepeatButtonStyle}">
                                                                <RepeatButton.ContentTemplate>
                                                                    <DataTemplate>
                                                                        <Path
                                                                            Width="9"
                                                                            Height="5"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z"
                                                                            Fill="{DynamicResource ForegroundBrush}"
                                                                            Focusable="False"
                                                                            SnapsToDevicePixels="True" />
                                                                    </DataTemplate>
                                                                </RepeatButton.ContentTemplate>
                                                            </RepeatButton>
                                                            <Grid.LayoutTransform>
                                                                <ScaleTransform ScaleX="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" ScaleY="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" />
                                                            </Grid.LayoutTransform>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </xctk:ButtonSpinner.Style>
                        </xctk:ButtonSpinner>
                        <ToggleButton
                            x:Name="_timePickerToggleButton"
                            Grid.Column="1"
                            Background="Red"
                            Focusable="False"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.IsHitTestVisible>
                                <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <xctk:InverseBoolConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ToggleButton.IsHitTestVisible>
                            <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <xctk:InverseBoolConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ToggleButton.IsEnabled>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid SnapsToDevicePixels="True">
                                                    <xctk:ButtonChrome
                                                        x:Name="ToggleButtonChrome"
                                                        Background="{DynamicResource ComboBoxButtonBgBrush}"
                                                        CornerRadius="0">

                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*" />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <ContentPresenter
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Stretch"
                                                                Content="{TemplateBinding Content}"
                                                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            <Grid
                                                                x:Name="arrowGlyph"
                                                                Grid.Column="1"
                                                                Margin="5"
                                                                IsHitTestVisible="False">
                                                                <Path
                                                                    x:Name="Arrow"
                                                                    Width="9"
                                                                    Height="5"
                                                                    Margin="0 1 0 0"
                                                                    Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z"
                                                                    Fill="{DynamicResource ForegroundBrush}" />
                                                                <Grid.LayoutTransform>
                                                                    <ScaleTransform ScaleX="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" ScaleY="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" />
                                                                </Grid.LayoutTransform>
                                                            </Grid>
                                                        </Grid>
                                                    </xctk:ButtonChrome>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="Arrow" Property="Fill" Value="Red" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <ToggleButton.Visibility>
                                <TemplateBinding Property="ShowDropDownButton">
                                    <TemplateBinding.Converter>
                                        <BooleanToVisibilityConverter />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </ToggleButton.Visibility>
                        </ToggleButton>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            IsOpen="{Binding IsChecked, ElementName=_timePickerToggleButton}"
                            StaysOpen="False"
                            ToolTip="">
                            <Popup.Resources>
                                <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border
                                MinWidth="{Binding ActualWidth, ElementName=root}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                BorderBrush="#FFABADB3"
                                BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="Red" />
                                        <GradientStop Offset="1" Color="#FFE5E5E5" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <ListBox
                                        x:Name="PART_TimeListItems"
                                        BorderThickness="0"
                                        DisplayMemberPath="Display">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Padding" Value="4" />
                                                <!--<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>-->
                                                <!--<Setter Property="Background" Value="{DynamicResource ContextMenuBackgroundBrush}"/>-->
                                                <Style.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True" />
                                                            <Condition Property="IsSelected" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <!--<Setter Property="Background" Value="#FFB8E0F3" />-->
                                                        <Setter Property="BorderBrush" Value="Red" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="False" />
                                                            <Condition Property="IsSelected" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <!--<Setter Property="Background" Value="#FFC4E5F6" />-->
                                                        <Setter Property="BorderBrush" Value="{DynamicResource HoverContextMenuBgBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True" />
                                                            <Condition Property="IsSelected" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <!--<Setter Property="Background" Value="#FFD1E8FF" />-->
                                                        <Setter Property="BorderBrush" Value="{DynamicResource HoverContextMenuBgBrush}" />
                                                    </MultiTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource TimePickerHoverBorderBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="DateTimePicker">
                                    <Condition.Binding>
                                        <Binding Path="TemplatedParent" RelativeSource="{RelativeSource Self}">
                                            <Binding.Converter>
                                                <xctk:ObjectTypeToNameConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </Condition.Binding>
                                </Condition>
                                <Condition Binding="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="_timePickerToggleButton" Property="IsHitTestVisible" Value="True" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxButtonBgBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1 0 0 0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBaseButtonBgBrush}" />
                            <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBaseButtonBgBrush}" />
                            <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBaseButtonBgBrush}" />
                            <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />-->
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="RepeatButtonStyle"
        BasedOn="{StaticResource BaseButtonStyle}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    </Style>

    <!--  Calendar  -->
    <Style x:Key="CalendarStyle" TargetType="{x:Type Calendar}">
        <Setter Property="Background" Value="{DynamicResource TransparentBrush}" />
        <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CalendarDayButtonStyle}" />
        <Setter Property="CalendarButtonStyle" Value="{DynamicResource CalendarButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem
                            x:Name="PART_CalendarItem"
                            Background="{TemplateBinding Background}"
                            Foreground="Blue"
                            Style="{DynamicResource ReminderCalendarItemStyle}" />
                        <StackPanel.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" ScaleY="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" />
                        </StackPanel.LayoutTransform>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Calendar day view style  -->
    <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="Background" Value="{DynamicResource HoverCalendarItemBgBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <Rectangle
                            x:Name="TodayBackground"
                            Fill="{DynamicResource CalendarTodayBgBrush}"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                        <Rectangle
                            x:Name="Background"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />

                        <ContentControl
                            x:Name="Content"
                            Margin="5 1 5 1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            FontSize="{TemplateBinding FontSize}"
                            IsTabStop="False">
                            <ContentControl.Foreground>
                                <LinearGradientBrush>
                                    <!--  First 2 is the selected day  -->
                                    <GradientStop Offset="0" Color="{DynamicResource Foreground}" />
                                    <GradientStop Offset="0" Color="{DynamicResource Foreground}" />
                                    <GradientStop Offset="0" Color="{DynamicResource Foreground}" />
                                    <GradientStop Offset="1" Color="{DynamicResource Foreground}" />
                                </LinearGradientBrush>
                            </ContentControl.Foreground>
                        </ContentControl>

                        <Path
                            x:Name="BlackoutVisual"
                            Margin="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                            Fill="#FF000000"
                            Opacity="0"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill" />
                        <Rectangle
                            x:Name="FocusVisual"
                            IsHitTestVisible="false"
                            RadiusX="1"
                            RadiusY="1"
                            Stroke="#FFC6C6C6"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".35"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                            To="{DynamicResource CalendarDisabledDays}"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                            To="{DynamicResource CalendarDisabledDays}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay" />
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="TodayBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay" />
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BlackoutVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".2"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Control colors.  -->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FF26FF00</Color>
    <Color x:Key="ContentAreaColorDark">#FF00FFDE</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF26FF00</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>

    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--  Border colors  -->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--  Control-specific resources.  -->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
        <GradientStop Offset="0.5" Color="{DynamicResource ControlMediumColor}" />
        <GradientStop Offset="1" Color="{DynamicResource ControlLightColor}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#000000FF" />
                <GradientStop Offset="0.4" Color="#6026FF00" />
                <GradientStop Offset="0.6" Color="#6000FF1B" />
                <GradientStop Offset="1" Color="#000000FF" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--  Style for the months of a year and years of a decade.  -->
    <Style x:Key="CalendarButtonStyle" TargetType="{x:Type CalendarButton}">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{DynamicResource HoverCalendarItemBgBrush}"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />

                        <Rectangle
                            x:Name="Background"
                            Fill="{DynamicResource HoverCalendarItemBgBrush}"
                            Opacity="0"
                            RadiusX="0"
                            RadiusY="0" />
                        <ContentPresenter
                            x:Name="NormalText"
                            Margin="14 0 14 1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="{DynamicResource Foreground}" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Rectangle
                            x:Name="CalendarButtonFocusVisual"
                            Fill="{DynamicResource HoverCalendarItemBgBrush}"
                            IsHitTestVisible="false"
                            RadiusX="1"
                            RadiusY="1"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="{DynamicResource CalendarDisabledDays}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlMediumColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Calendar Item style  -->
    <Style x:Key="ReminderCalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0 3 0 3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <!--  Old font: Verdana  -->
                            <TextBlock
                                Margin="0 6 0 6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource Ubuntu}"
                                FontSize="14"
                                FontWeight="Normal"
                                Foreground="{DynamicResource CalendarDayColumnBrush}"
                                Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1">
                            <Border
                                BorderBrush="#FFFFFFFF"
                                BorderThickness="0"
                                CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle
                                                    Fill="{DynamicResource CalendarButtonBgBrush}"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Width="6"
                                                        Height="10"
                                                        Margin="10 0 0 0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                        Fill="{DynamicResource ForegroundBrush}"
                                                        Stretch="Fill" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <!--<VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                                To="{DynamicResource CalendarButtonBg}"
                                                                                Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>-->
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle
                                                    Fill="{DynamicResource CalendarButtonBgBrush}"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Width="6"
                                                        Height="10"
                                                        Margin="0 0 10 0"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                        Fill="{DynamicResource ForegroundBrush}"
                                                        Stretch="Fill" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <!--<VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                                To="{DynamicResource CalendarButtonBg}"
                                                                                Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>-->
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <ContentPresenter
                                                    x:Name="buttonContent"
                                                    Margin="1 10 1 9"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    TextElement.Foreground="{DynamicResource ForegroundBrush}" />
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <!--<VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="buttonContent"
                                                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                                To="{DynamicResource CalendarButtonBg}"
                                                                                Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>-->
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="buttonContent"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button
                                        x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Width="28"
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        Focusable="False"
                                        Template="{StaticResource PreviousButtonTemplate}" />
                                    <Button
                                        x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        FontSize="10.5"
                                        FontWeight="Bold"
                                        Template="{StaticResource HeaderButtonTemplate}" />
                                    <Button
                                        x:Name="PART_NextButton"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Width="28"
                                        Height="20"
                                        HorizontalAlignment="Right"
                                        Focusable="False"
                                        Template="{StaticResource NextButtonTemplate}" />
                                    <Grid
                                        x:Name="PART_MonthView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6 -1 6 6"
                                        HorizontalAlignment="Center"
                                        Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid
                                        x:Name="PART_YearView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6 -3 7 6"
                                        HorizontalAlignment="Center"
                                        Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle
                            x:Name="PART_DisabledVisual"
                            Fill="{StaticResource DisabledColor}"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2"
                            Stretch="Fill"
                            Stroke="{StaticResource DisabledColor}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DisabledVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>