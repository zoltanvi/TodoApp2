<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:TodoApp2"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ScrollBars.xaml" />
        <ResourceDictionary Source="ComboBoxes.xaml" />
        <ResourceDictionary Source="Panels.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <system:Double x:Key="FontSizeSmallest">10</system:Double>
    <system:Double x:Key="FontSizeSmaller">12</system:Double>
    <system:Double x:Key="FontSizeSmall">14</system:Double>
    <system:Double x:Key="FontSizeMedium">16</system:Double>
    <system:Double x:Key="FontSizeRegular">18</system:Double>
    <system:Double x:Key="FontSizeRegularIcon">20</system:Double>
    <system:Double x:Key="FontSizeLarge">22</system:Double>
    <system:Double x:Key="FontSizeHuge">28</system:Double>
    <system:Double x:Key="FontSizeIconLarge">30</system:Double>
    <system:Double x:Key="FontSizeGiant">40</system:Double>

    <Style x:Key="BaseTextBlockClearTypeStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style x:Key="BaseTextBoxClearTypeStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style x:Key="BaseLabelClearTypeStyle" TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolTipBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource ContextMenuBgBrush}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Medium, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="10 5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BaseRichTextBoxStyle" TargetType="RichTextBox">
        <Setter Property="FontFamily" Value="{Binding Path=AppSettings.FontFamily, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource enumToFontFamilyConverter}}" />
        <Setter Property="FontSize" Value="{Binding Path=AppSettings.TaskFontSizeDouble, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource fontSizeScaler}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CaretBrush" Value="{DynamicResource CaretBrush}" />
        <Setter Property="AutoWordSelection" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />

        <Style.Resources>
            <Style BasedOn="{StaticResource DarkScrollBarStyle}" TargetType="{x:Type ScrollBar}" />

            <!--  Fixes line heights in RichTextBoxes  -->
            <Style TargetType="{x:Type Paragraph}">
                <Setter Property="Margin" Value="0" />
            </Style>

        </Style.Resources>
    </Style>


    <Style
        x:Key="CategoryTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style
        x:Key="PageTitleTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource UIBoldFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Huge, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="PageTitleEditorTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource UIBoldFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Huge, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CaretBrush" Value="{DynamicResource CaretBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SideMenuTitleTextBlockStyle"
        BasedOn="{StaticResource PageTitleTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
    </Style>

    <Style
        x:Key="IconLabelStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontFamily" Value="{StaticResource IconFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.RegularIcon, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontWeight" Value="UltraLight" />
    </Style>

    <Style
        x:Key="ContextMenuIconStyle"
        BasedOn="{StaticResource IconLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Margin" Value="-3 0" />
    </Style>

    <Style
        x:Key="IconLabelLargeStyle"
        BasedOn="{StaticResource IconLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.LargeIcon, Source={x:Static local:ViewModelLocator.Instance}}" />
    </Style>

    <Style x:Key="BaseInputTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <!--<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>-->
        <Setter Property="CaretBrush" Value="{DynamicResource CaretBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <!--<ScrollViewer.ContentTemplate>
                                    <DataTemplate>
                                        <Grid Background="{Binding Background, ElementName=PART_ContentHost}" RenderOptions.ClearTypeHint="Enabled">
                                            <ContentPresenter Content="{Binding Path=Content, ElementName=PART_ContentHost}"></ContentPresenter>
                                        </Grid>
                                    </DataTemplate>
                                </ScrollViewer.ContentTemplate>-->
                            </ScrollViewer>
                        </Border>

                        <TextBlock
                            x:Name="placeholder"
                            Margin="2 0 0 0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource PlaceholderBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource BaseTextBlockClearTypeStyle}" TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SidePageAddNewTextBoxStyle"
        BasedOn="{StaticResource BaseInputTextBoxStyle}"
        TargetType="TextBox">
        <Style.Resources>
            <Style BasedOn="{StaticResource DarkScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="NotificationTitleStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontWeight" Value="UltraLight" />
        <Setter Property="Padding" Value="0 4 0 0" />
    </Style>

    <Style
        x:Key="NotificationCategoryTitleStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Large, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="14 0 0 0" />
    </Style>

    <Style
        x:Key="NotificationReminderDateStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Smaller, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="14 0 0 0" />
    </Style>

    <Style
        x:Key="ReminderLabelStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Smallest, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0 0 8 6" />
    </Style>

    <Style
        x:Key="SettingsDescriptionStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style
        x:Key="SettingsDescriptionBoldStyle"
        BasedOn="{StaticResource SettingsDescriptionStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.RegularIcon, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style
        x:Key="SettingsIconLabelStyle"
        BasedOn="{StaticResource IconLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0 0 10 0" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Medium, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style
        x:Key="SettingsALabelStyle"
        BasedOn="{StaticResource SettingsIconLabelStyle}"
        TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
    </Style>

    <Style x:Key="SettingsPageTitleStyle" TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Large, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0 0 0 5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style TargetType="{x:Type local:ShortcutKey}">
        <Setter Property="BorderThickness" Value="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TagPurpleBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource TagPurpleBgBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TagPurpleBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ShortcutKey}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        MinWidth="{TemplateBinding MinWidth}"
                        CornerRadius="4">
                        <Label
                            Content="{TemplateBinding Content}"
                            Padding="0"
                            Margin="10 2"
                            Foreground="{TemplateBinding Foreground}"
                            FontWeight="{TemplateBinding FontWeight}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Content" Value="Alt">
                <Setter Property="BorderBrush" Value="{DynamicResource TagGreenBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagGreenBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagGreenBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Ctrl">
                <Setter Property="BorderBrush" Value="{DynamicResource TagBlueBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagBlueBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagBlueBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Shift">
                <Setter Property="BorderBrush" Value="{DynamicResource TagOrangeBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagOrangeBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagOrangeBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Space">
                <Setter Property="BorderBrush" Value="{DynamicResource TagCyanBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagCyanBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagCyanBrush}" />
            </Trigger>

            <Trigger Property="Content" Value="Mouse scroll UP">
                <Setter Property="BorderBrush" Value="{DynamicResource TagMagentaBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagMagentaBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagMagentaBrush}" />
            </Trigger>
            <Trigger Property="Content" Value="Mouse scroll DOWN">
                <Setter Property="BorderBrush" Value="{DynamicResource TagMagentaBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TagMagentaBgBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TagMagentaBrush}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:ShortcutSeparator}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={x:Static local:ViewModelLocator.Instance}}" />
    </Style>

    <Label
        x:Key="ctxIconCompleted"
        Content="{StaticResource SegoeIconCompleted}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconNotCompleted"
        Content="{StaticResource SegoeIconNotCompleted}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconPin"
        Content="{StaticResource SegoeIconPin}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconUnpin"
        Content="{StaticResource SegoeIconUnpin}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconEdit"
        Content="{StaticResource SegoeIconEdit}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconReminder"
        Content="{StaticResource SegoeIconDateTime}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconColor1"
        Content="{StaticResource SegoeIconPalette}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconColor2"
        Content="{StaticResource SegoeIconPalette}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconColor3"
        Content="{StaticResource SegoeIconPalette}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconSort"
        Content="{StaticResource SegoeIconSort}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconMoveToTop"
        Content="{StaticResource SegoeIconArrowUp}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconMoveToBottom"
        Content="{StaticResource SegoeIconArrowDown}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconMoveTo"
        Content="{StaticResource SegoeIconMoveTo}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconReset"
        Content="{StaticResource SegoeIconResetAll}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconDelete1"
        Content="{StaticResource SegoeIconTrash}"
        Style="{StaticResource ContextMenuIconStyle}" />

    <Label
        x:Key="ctxIconDelete2"
        Content="{StaticResource SegoeIconTrash}"
        Style="{StaticResource ContextMenuIconStyle}" />
</ResourceDictionary>