<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:TodoApp2"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ScrollBars.xaml" />
        <ResourceDictionary Source="ComboBoxes.xaml" />
        <ResourceDictionary Source="Panels.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <system:Double x:Key="FontSizeSmallest">10</system:Double>
    <system:Double x:Key="FontSizeSmaller">12</system:Double>
    <system:Double x:Key="FontSizeSmall">14</system:Double>
    <system:Double x:Key="FontSizeMedium">16</system:Double>
    <system:Double x:Key="FontSizeRegular">18</system:Double>
    <system:Double x:Key="FontSizeRegularIcon">20</system:Double>
    <system:Double x:Key="FontSizeLarge">22</system:Double>
    <system:Double x:Key="FontSizeHuge">28</system:Double>
    <system:Double x:Key="FontSizeIconLarge">30</system:Double>
    <system:Double x:Key="FontSizeGiant">40</system:Double>

    <Style x:Key="BaseTextBlockClearTypeStyle" TargetType="TextBlock">
        <!--<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>-->
    </Style>

    <Style x:Key="BaseTextBoxClearTypeStyle" TargetType="TextBox">
        <!--<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>-->
    </Style>

    <Style x:Key="BaseLabelClearTypeStyle" TargetType="Label">
        <!--<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>-->
    </Style>

    <Style
        x:Key="TaskListItemDescriptionTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{Binding Path=ApplicationViewModel.ApplicationSettings.TaskFontSize, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource fontSizeToDoubleConverter}}" />
        <Setter Property="FontFamily" Value="{Binding Path=ApplicationViewModel.ApplicationSettings.FontFamily, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource enumToFontFamilyConverter}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <!--<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>-->
        <Setter Property="Background" Value="#00000000" />
    </Style>


    <Style x:Key="DateTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonBorderBrush}" />
    </Style>

    <Style x:Key="NotePageTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{Binding Path=ApplicationViewModel.ApplicationSettings.FontFamily, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource enumToFontFamilyConverter}}" />
        <Setter Property="FontSize" Value="{Binding Path=ApplicationViewModel.ApplicationSettings.TaskFontSize, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource fontSizeToDoubleConverter}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CaretBrush" Value="{DynamicResource CaretBrush}" />
        <Setter Property="AutoWordSelection" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="AcceptsTab" Value="True" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBgBrush}" />
        <!--<Setter Property="TextWrapping" Value="Wrap" />-->
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <!--<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>-->

    </Style>


    <Style x:Key="BaseRichTextBoxStyle" TargetType="RichTextBox">
        <Setter Property="FontFamily" Value="{Binding Path=ApplicationViewModel.ApplicationSettings.FontFamily, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource enumToFontFamilyConverter}}" />
        <Setter Property="FontSize" Value="{Binding Path=ApplicationViewModel.ApplicationSettings.TaskFontSize, Source={x:Static local:ViewModelLocator.Instance}, Converter={StaticResource fontSizeToDoubleConverter}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CaretBrush" Value="{DynamicResource CaretBrush}" />
        <Setter Property="AutoWordSelection" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <!--<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>-->

        <Style.Resources>
            <Style BasedOn="{StaticResource DarkScrollBarStyle}" TargetType="{x:Type ScrollBar}" />

            <!--  Fixes line heights in RichTextBoxes  -->
            <Style TargetType="{x:Type Paragraph}">
                <Setter Property="Margin" Value="0" />
            </Style>

        </Style.Resources>
    </Style>

    <Style
        x:Key="FormattableRichTextBoxStyle"
        BasedOn="{StaticResource BaseRichTextBoxStyle}"
        TargetType="RichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextEditorBox}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="ToolBarBorder"
                            Grid.Row="0"
                            Grid.Column="1"
                            Background="{TemplateBinding Background}">
                            <DockPanel>
                                <!--  Visibility="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}"  -->
                                <ToolBar
                                    DockPanel.Dock="Top"
                                    IsTabStop="False"
                                    Template="{StaticResource CustomToolBarControlTemplate}"
                                    ToolBarTray.IsLocked="True"
                                    Visibility="{Binding IsChecked, ElementName=IsEditorOpenToggle, Converter={StaticResource boolToVisibilityConverter}}">
                                    <ToggleButton
                                        Command="EditingCommands.ToggleBold"
                                        CommandTarget="{Binding ElementName=PART_ContentHost}"
                                        Content="{DynamicResource SegoeIconBold}"
                                        IsChecked="{Binding IsSelectionBold, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource TextEditorToggleButtonStyle}"
                                        ToolTip="Bold" />
                                    <ToggleButton
                                        Command="EditingCommands.ToggleItalic"
                                        CommandTarget="{Binding ElementName=PART_ContentHost}"
                                        Content="{DynamicResource SegoeIconItalic}"
                                        IsChecked="{Binding IsSelectionItalic, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource TextEditorToggleButtonStyle}"
                                        ToolTip="Italic" />
                                    <ToggleButton
                                        Command="EditingCommands.ToggleUnderline"
                                        CommandTarget="{Binding ElementName=PART_ContentHost}"
                                        Content="{DynamicResource SegoeIconUnderlined}"
                                        IsChecked="{Binding IsSelectionUnderlined, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource TextEditorToggleButtonStyle}"
                                        ToolTip="Underline" />

                                    <Button
                                        Command="EditingCommands.IncreaseFontSize"
                                        CommandTarget="{Binding ElementName=PART_ContentHost}"
                                        Content="{DynamicResource SegoeIconFontSizeIncrease}"
                                        Style="{DynamicResource TextEditorButtonStyle}"
                                        ToolTip="Increase size" />
                                    <Button
                                        Command="EditingCommands.DecreaseFontSize"
                                        CommandTarget="{Binding ElementName=PART_ContentHost}"
                                        Content="{DynamicResource SegoeIconFontSizeDecrease}"
                                        Style="{DynamicResource TextEditorButtonStyle}"
                                        ToolTip="Decrease size" />

                                    <!--  Style="{DynamicResource ColorPickerTableStyle}"  -->
                                    <!--  SelectedItem="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  -->
                                    <local:ColorPickerComboBox
                                        AppliedColor="{Binding AppliedColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Focusable="False"
                                        IsSynchronizedWithCurrentItem="True"
                                        ItemContainerStyle="{StaticResource ColorPickerItemContainerStyle}"
                                        ItemTemplate="{StaticResource ColorPickerItemTemplate}"
                                        ItemsSource="{Binding ColorListProvider.Items, Source={x:Static local:ViewModelLocator.Instance}}"
                                        Style="{DynamicResource ColorPickerButtonStyle}">
                                        <!--<Behaviors:Interaction.Triggers>
                                            <Behaviors:EventTrigger EventName="SelectionChanged">
                                                <Behaviors:InvokeCommandAction Command="{Binding ApplyColorCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Behaviors:EventTrigger>
                                        </Behaviors:Interaction.Triggers>-->
                                    </local:ColorPickerComboBox>

                                    <Button
                                        Command="{Binding ResetFormattingCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        CommandTarget="{Binding ElementName=PART_ContentHost}"
                                        Content="{DynamicResource SegoeIconDeleteFormatting}"
                                        Style="{DynamicResource TextEditorButtonStyle}"
                                        ToolTip="Reset formatting" />
                                </ToolBar>
                            </DockPanel>
                        </Border>

                        <!--  Main content  -->
                        <!--  Background="{TemplateBinding Background}"  -->
                        <Border
                            x:Name="border"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="0,0,10,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <!--<ScrollViewer.ContentTemplate>
                                    <DataTemplate>
                                        <Grid Background="{Binding Background, ElementName=PART_ContentHost}" RenderOptions.ClearTypeHint="Enabled">
                                            <ContentPresenter Content="{Binding Path=Content, ElementName=PART_ContentHost}"></ContentPresenter>
                                        </Grid>
                                    </DataTemplate>
                                </ScrollViewer.ContentTemplate>-->
                            </ScrollViewer>
                        </Border>

                        <Border
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Width="15"
                            Height="15"
                            HorizontalAlignment="right"
                            VerticalAlignment="Top"
                            Visibility="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <ToggleButton
                                x:Name="IsEditorOpenToggle"
                                Margin="2"
                                Foreground="{DynamicResource ForegroundBrush}"
                                IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource TextEditorArrowToggleButtonStyle}" />
                        </Border>

                        <!--  Watermark text  -->
                        <TextBlock
                            x:Name="PART_placeholder"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="2,0,10,0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource PlaceholderBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource BaseTextBlockClearTypeStyle}" TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Value="true">
                                            <DataTrigger.Binding>
                                                <Binding Path="IsEmpty" RelativeSource="{RelativeSource TemplatedParent}" />
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Value="false">
                                            <DataTrigger.Binding>
                                                <Binding Path="IsEmpty" RelativeSource="{RelativeSource TemplatedParent}" />
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBgBrush}" />
    </Style>

    <Style
        x:Key="TaskListItemDescriptionRichTextBoxStyle"
        BasedOn="{StaticResource BaseRichTextBoxStyle}"
        TargetType="RichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextEditorBox}">

                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <!--<ScrollViewer.ContentTemplate>
                                    <DataTemplate>
                                        <Grid Background="{Binding Background, ElementName=PART_ContentHost}" RenderOptions.ClearTypeHint="Enabled">
                                            <ContentPresenter Content="{Binding Path=Content, ElementName=PART_ContentHost}"></ContentPresenter>
                                        </Grid>
                                    </DataTemplate>
                                </ScrollViewer.ContentTemplate>-->
                            </ScrollViewer>
                        </Border>

                        <TextBlock
                            x:Name="PART_placeholder"
                            Margin="2,0,0,0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource PlaceholderBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">

                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource BaseTextBlockClearTypeStyle}" TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Value="true">
                                            <DataTrigger.Binding>
                                                <Binding Path="IsEmpty" RelativeSource="{RelativeSource TemplatedParent}" />
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Value="false">
                                            <DataTrigger.Binding>
                                                <Binding Path="IsEmpty" RelativeSource="{RelativeSource TemplatedParent}" />
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style
        x:Key="CategoryTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style
        x:Key="PageTitleTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource SegoeUIVariableSemibold}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Huge, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style
        x:Key="SideMenuTitleTextBlockStyle"
        BasedOn="{StaticResource PageTitleTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style
        x:Key="IconLabelStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontFamily" Value="{StaticResource SegoeMDL2Assets}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.RegularIcon, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontWeight" Value="UltraLight" />
    </Style>

    <Style
        x:Key="IconLabelLargeStyle"
        BasedOn="{StaticResource IconLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.LargeIcon, Source={x:Static local:ViewModelLocator.Instance}}" />
    </Style>

    <Style x:Key="BaseInputTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <!--<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>-->
        <Setter Property="CaretBrush" Value="{DynamicResource CaretBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <!--<ScrollViewer.ContentTemplate>
                                    <DataTemplate>
                                        <Grid Background="{Binding Background, ElementName=PART_ContentHost}" RenderOptions.ClearTypeHint="Enabled">
                                            <ContentPresenter Content="{Binding Path=Content, ElementName=PART_ContentHost}"></ContentPresenter>
                                        </Grid>
                                    </DataTemplate>
                                </ScrollViewer.ContentTemplate>-->
                            </ScrollViewer>
                        </Border>

                        <TextBlock
                            x:Name="placeholder"
                            Margin="2,0,0,0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource PlaceholderBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource BaseTextBlockClearTypeStyle}" TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="AddNewTaskTextBoxStyle"
        BasedOn="{StaticResource BaseInputTextBoxStyle}"
        TargetType="TextBox">
        <Style.Resources>
            <Style BasedOn="{StaticResource DarkScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
        </Style.Resources>
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBgBrush}" />
    </Style>

    <Style x:Key="PageTitleTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource SegoeUIVariableSemibold}" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Huge, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="CaretBrush" Value="{DynamicResource CaretBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="NotificationTitleStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontWeight" Value="UltraLight" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0,4,0,0" />
    </Style>

    <Style
        x:Key="NotificationCategoryTitleStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Large, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="14,0,0,0" />
    </Style>

    <Style
        x:Key="NotificationReminderDateStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Smaller, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="14,0,0,0" />
    </Style>

    <Style
        x:Key="ReminderLabelStyle"
        BasedOn="{StaticResource BaseLabelClearTypeStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Smallest, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0,0,8,6" />
    </Style>

    <Style
        x:Key="SettingsDescriptionStyle"
        BasedOn="{StaticResource BaseTextBlockClearTypeStyle}"
        TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Small, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style
        x:Key="SettingsDescriptionBoldStyle"
        BasedOn="{StaticResource SettingsDescriptionStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Regular, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style
        x:Key="SettingsIconLabelStyle"
        BasedOn="{StaticResource IconLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="FontSize" Value="{Binding UIScaler.FontSize.Medium, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

</ResourceDictionary>