<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TodoApp2"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    Background="{DynamicResource ComboBoxButtonBrush}"
                    BorderBrush="{DynamicResource ComboBoxBorderBrush}"
                    BorderThickness="2" />
            <Border Grid.Column="0"
                    CornerRadius="0"
                    Margin="2"
                    Background="{DynamicResource ComboBoxBackgroundBrush}"
                    BorderBrush="{DynamicResource ComboBoxBorderBrush}"
                    BorderThickness="0 0 0 0" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{DynamicResource ComboBoxArrowBrush}"
                  HorizontalAlignment="Left"
                  Margin="6 0 0 0"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource ComboBoxButtonMouseOverBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource ComboBoxButtonCheckedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#EEEEEE" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888" />
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Style BasedOn="{StaticResource DarkScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxSelectedItemForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Width="{TemplateBinding Width}">
                        <ToggleButton Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" />
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="10 5 23 3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="10 3 23 3"
                                 Focusable="True"
                                 Background="#FFC15C5C"
                                 Foreground="LightBlue"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource ComboBoxDropDownBackgroundBrush}"
                                        BorderThickness="0"
                                        BorderBrush="#888888" />
                                <ScrollViewer Margin="0 4" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="0" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>

    <!--  SimpleStyles: ComboBoxItem  -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownForegroundBrush}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="8 2 0 2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource ComboBoxDropDownMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  COLOR PICKER STYLE  -->

    <ControlTemplate x:Key="ColorPickerToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="10" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    Background="Transparent"
                    BorderBrush="{DynamicResource ComboBoxBorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{DynamicResource ComboBoxArrowBrush}"
                  HorizontalAlignment="Left"
                  Margin="0 0 0 0"
                  VerticalAlignment="Center"
                  Data="M 0,0 L 0,2 L 4,6 L 8,2 L 8,0 L 4,0 z" />
            <Grid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" ScaleY="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" />
            </Grid.LayoutTransform>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true" />
            <Trigger Property="ToggleButton.IsChecked" Value="true" />
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888" />
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="ColorPickerTableStyle" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Style BasedOn="{StaticResource DarkScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Height" Value="{Binding UIScaler.ColorPickerHeight, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Width" Value="{Binding UIScaler.ColorPickerWidth, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxSelectedItemForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Width="{TemplateBinding Width}">
                            <ToggleButton x:Name="ToggleButton"
                                          Template="{StaticResource ColorPickerToggleButton}"
                                          Focusable="false"
                                          BorderThickness="0"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press" />
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">

                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource ComboBoxDropDownBackgroundBrush}"
                                            BorderThickness="0"
                                            CornerRadius="4"
                                            BorderBrush="#888888" />

                                    <WrapPanel Margin="8"
                                               Orientation="Vertical"
                                               IsItemsHost="True"
                                               KeyboardNavigation.DirectionalNavigation="Contained"
                                               Height="{Binding UIScaler.ColorPickerDropDownHeight, Source={x:Static local:ViewModelLocator.Instance}}" />

                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="4" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorPickerOnlyDropDownStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource ColorPickerTableStyle}">
        <Setter Property="Width" Value="{Binding UIScaler.ColorPickerOnlyDropDownWidth, Source={x:Static local:ViewModelLocator.Instance}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Width="{TemplateBinding Width}">
                            <ToggleButton x:Name="ToggleButton"
                                          Template="{StaticResource ColorPickerToggleButton}"
                                          Focusable="false"
                                          BorderThickness="0"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press" />
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="0"
                                              Visibility="Collapsed"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">

                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource ComboBoxDropDownBackgroundBrush}"
                                            BorderThickness="0"
                                            CornerRadius="4"
                                            BorderBrush="#888888" />

                                    <WrapPanel Margin="8"
                                               Orientation="Vertical"
                                               IsItemsHost="True"
                                               KeyboardNavigation.DirectionalNavigation="Contained"
                                               Height="{Binding UIScaler.ColorPickerDropDownHeight, Source={x:Static local:ViewModelLocator.Instance}}" />

                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="4" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextEditorButtonHoverBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <DataTemplate x:Key="ColorPickerItemTemplate">
        <Grid>
            <Border x:Name="ItemBorder"
                    Width="{Binding UIScaler.ColorPickerItemSize, Source={x:Static local:ViewModelLocator.Instance}}"
                    Height="{Binding UIScaler.ColorPickerItemSize, Source={x:Static local:ViewModelLocator.Instance}}"
                    CornerRadius="2"
                    Background="{Binding}" />

            <Path Stroke="Red"
                  StrokeThickness="1"
                  Name="DiagonalLine"
                  Visibility="Collapsed">
                <Path.Data>
                    <LineGeometry StartPoint="15,0" EndPoint="0,15" />
                </Path.Data>
                <Path.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" ScaleY="{Binding UIScaler.ScaleValue, Source={x:Static local:ViewModelLocator.Instance}}" />
                </Path.LayoutTransform>
            </Path>

        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="Transparent">
                <Setter Property="Background"
                        TargetName="ItemBorder"
                        Value="White" />
                <Setter Property="Visibility"
                        TargetName="DiagonalLine"
                        Value="Visible" />
                <Setter Property="BorderThickness"
                        TargetName="ItemBorder"
                        Value="0.5" />
                <Setter Property="BorderBrush"
                        TargetName="ItemBorder"
                        Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="">
                <Setter Property="Background"
                        TargetName="ItemBorder"
                        Value="White" />
                <Setter Property="Visibility"
                        TargetName="DiagonalLine"
                        Value="Visible" />
                <Setter Property="BorderThickness"
                        TargetName="ItemBorder"
                        Value="0.5" />
                <Setter Property="BorderBrush"
                        TargetName="ItemBorder"
                        Value="Black" />
            </DataTrigger>
            
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="ColorPickerItemContainerStyle" TargetType="ComboBoxItem">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="PaddingBorder"
                            Padding="6"
                            Background="Transparent">
                        <Border Name="HighlightBorder"
                                BorderBrush="{Binding}"
                                CornerRadius="2">
                            <ContentPresenter />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness"
                                    TargetName="HighlightBorder"
                                    Value="1" />
                            <Setter Property="Margin"
                                    TargetName="HighlightBorder"
                                    Value="-2" />
                            <Setter Property="Padding"
                                    TargetName="HighlightBorder"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorPickerButtonStyle" TargetType="local:ColorPickerComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPickerComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0">
                            <Button Width="{Binding UIScaler.ColorPickerItemSize, Source={x:Static local:ViewModelLocator.Instance}}"
                                    Height="{Binding UIScaler.ColorPickerItemSize, Source={x:Static local:ViewModelLocator.Instance}}"
                                    Margin="3"
                                    Style="{DynamicResource InternalColorPickerButtonStyle}"
                                    Background="{Binding DisplayColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource stringRGBToBrushConverter}}"
                                    Command="{Binding ApplyDisplayColorCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>

                        <local:ColorPickerComboBox Grid.Column="1"
                                                   ItemsSource="{Binding ColorListProvider.Items, Source={x:Static local:ViewModelLocator.Instance}}"
                                                   IsSynchronizedWithCurrentItem="True"
                                                   Style="{DynamicResource ColorPickerOnlyDropDownStyle}"
                                                   ItemContainerStyle="{StaticResource ColorPickerItemContainerStyle}"
                                                   ItemTemplate="{StaticResource ColorPickerItemTemplate}"
                                                   Focusable="False" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>