<local:BasePage x:Class="TodoApp2.SettingsPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors" xmlns:core="clr-namespace:TodoApp2.Core;assembly=TodoApp2.Core" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:TodoApp2" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" Title="SettingsPage" d:DesignHeight="450" d:DesignWidth="800" x:TypeArguments="core:SettingsPageViewModel" mc:Ignorable="d">
    <local:BasePage.Resources>
        <ObjectDataProvider x:Key="ThemeDataProvider" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:Theme" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ThicknessDataProvider" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:Thickness" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="FontSizeDataProvider" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:FontSize" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="FontFamilyDataProvider" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:FontFamily" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="TaskSpacingDataProvider" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:TaskSpacing" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </local:BasePage.Resources>

    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Settings title  -->
            <Grid Grid.Row="0" Margin="15 10">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Style="{DynamicResource PageTitleTextBlockStyle}" Text="Settings" />

                <!--  BACK button  -->
                <Button Grid.Column="1" AutomationProperties.AutomationId="SettingsButton" Command="{Binding GoBackCommand}" Content="{DynamicResource SegoeIconArrowLeft}" Style="{DynamicResource ButtonIconHoverRectangleStyle}" ToolTip="Close settings" />

            </Grid>

            <ScrollViewer x:Name="OuterScrollViewer" Grid.Row="1" Template="{DynamicResource TaskListControlScrollViewerControlTemplate}">

                <Border Background="Transparent">

                    <StackPanel Margin="15 20 20 20" Orientation="Vertical">

                        <!--  ===========================================================  -->
                        <!--  Window and app settings  -->

                        <ToggleButton x:Name="windowSettingsBtn" Content="Window and app settings" IsChecked="True" Style="{DynamicResource ClickableTextToggleButtonStyle}" Margin="0 0 0 15" />

                        <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=windowSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">

                            <!--  Always on top  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconAlwaysOnTop}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Always on top" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsAlwaysOnTop, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Auto start app with Windows  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconRepeat}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Auto start app with Windows" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.RunAtStartup, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Rounded window corners  -->
                            <Border Style="{StaticResource SettingsItemStyle}">

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconRoundedCorners}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Rounded window corners" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.RoundedWindowCorners, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Title bar date  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconCalendar}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Window title bar date visible" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsTitleBarDateVisible, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Exit button minimizes to tray  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconMinimizeToTray}" Style="{DynamicResource SettingsIconLabelStyle}">
                                        <Label.LayoutTransform>
                                            <RotateTransform Angle="180" CenterX="0" CenterY="0" />
                                        </Label.LayoutTransform>
                                    </Label>

                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Exit button minimizes to tray" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsTrayIconEnabled, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Accent color  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconPalette}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Accent color" />

                                    <Border Grid.Column="2" Padding="20 0 0 0" HorizontalAlignment="Right">

                                        <!--  Color picker  -->
                                        <ComboBox ItemContainerStyle="{StaticResource TaskItemColorPickerItemContainerStyle}" ItemTemplate="{StaticResource TaskItemColorPickerItemTemplate}" ItemsSource="{Binding ColorListProvider.Items, Source={x:Static local:ViewModelLocator.Instance}}" SelectedItem="{Binding ApplicationViewModel.ApplicationSettings.AccentColor, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource TaskItemColorPickerStyle}" />
                                    </Border>

                                </Grid>
                            </Border>

                            <!--  App border color  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconPalette}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="App border color" />


                                    <Border Grid.Column="2" Padding="20 0 0 0" HorizontalAlignment="Right">

                                        <!--  Color picker  -->
                                        <ComboBox ItemContainerStyle="{StaticResource TaskItemColorPickerItemContainerStyle}" ItemTemplate="{StaticResource TaskItemColorPickerItemTemplate}" ItemsSource="{Binding ColorListProvider.Items, Source={x:Static local:ViewModelLocator.Instance}}" SelectedItem="{Binding ApplicationViewModel.ApplicationSettings.AppBorderColor, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource TaskItemColorPickerStyle}">

                                            <!--<Behaviors:Interaction.Triggers>
                                        <Behaviors:EventTrigger EventName="SelectionChanged">
                                            <Behaviors:InvokeCommandAction Command="{Binding ChangeAppBorderColorCommand}" />
                                        </Behaviors:EventTrigger>
                                    </Behaviors:Interaction.Triggers>-->
                                        </ComboBox>
                                    </Border>

                                </Grid>
                            </Border>

                        </StackPanel>


                        <!--  ===========================================================  -->
                        <!--  Themes  -->

                        <StackPanel Orientation="Horizontal">
                            <ToggleButton x:Name="themeSettingsBtn" Content="Themes" IsChecked="False" Style="{DynamicResource ClickableTextToggleButtonStyle}" />
                            <Label Margin="10 20 0 15" Content="(Click to open)" FontSize="{Binding UIScaler.FontSize.Small}" Foreground="{DynamicResource ForegroundBrush}" Opacity="0.4" Visibility="{Binding ElementName=themeSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityNegatedConverter}}" />
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=themeSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">

                            <local:ThemeListControl PreviewMouseWheel="ListView_PreviewMouseWheel" />

                        </StackPanel>


                        <!--  ===========================================================  -->
                        <!--  Task page settings  -->

                        <ToggleButton x:Name="taskPageSettingsBtn" Content="Task page settings" IsChecked="True" Style="{DynamicResource ClickableTextToggleButtonStyle}" />

                        <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=taskPageSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">

                            <!--  Category title visible  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconTitle}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Category title visible" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.CategoryTitleVisible, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Insert new task to the end  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconTaskOrder}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Insert new task to the end" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.InsertOrderReversed, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Move completed task to the end  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid ToolTip="The task list is reordered if this is turned on!">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconCheckList}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Move completed task to the end" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.MoveTaskOnCompletion, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Exit edit mode on focus lost  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid ToolTip="Needs page refresh to take effect.">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconEditMode}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Exit edit mode on focus lost" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.FocusLostSavesTask, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Play sound for completed tasks  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid ToolTip="Needs page refresh to take effect.">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconBell}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Play sound for completed tasks" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.PlaySoundOnTaskIsDoneChange, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Margin for task list  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconMargin}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Margin for task list" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.TaskListHasMargin, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                        </StackPanel>

                        <!--  ===========================================================  -->
                        <!--  Task item settings  -->

                        <ToggleButton x:Name="taskItemSettingsBtn" Content="Task item settings" IsChecked="True" Style="{DynamicResource ClickableTextToggleButtonStyle}" />

                        <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=taskItemSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">

                            <!--  Compact mode  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconCompactMode}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Spacing" />
                                    <ComboBox Grid.Column="2" HorizontalAlignment="Right" FontSize="{Binding UIScaler.FontSize.Small}" ItemsSource="{Binding Source={StaticResource TaskSpacingDataProvider}}" SelectedItem="{Binding ApplicationViewModel.ApplicationSettings.TaskSpacing, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" />
                                </Grid>
                            </Border>

                            <!--  Item border  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconBorderVisible}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Task border visible" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsItemBorderVisible, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Item background  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconBackgroundVisible}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Task background visible" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsItemBackgroundVisible, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Drop shadow  -->
                            <Border Style="{StaticResource SettingsItemStyle}" Visibility="Collapsed">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconRestoreWindow}" Style="{DynamicResource SettingsIconLabelStyle}">
                                        <Label.LayoutTransform>
                                            <RotateTransform Angle="90" CenterX="0" CenterY="0" />
                                        </Label.LayoutTransform>
                                    </Label>
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Task drop shadow" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.TaskItemDropShadow, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Creation date  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconCalendar}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Creation date visible" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsCreationDateVisible, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Modification date  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconCalendar}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Modification date visible" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsModificationDateVisible, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Color bar rounded  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconRoundedCorners}" Style="{DynamicResource SettingsIconLabelStyle}">
                                        <Label.LayoutTransform>
                                            <RotateTransform Angle="90" CenterX="0" CenterY="0" />
                                        </Label.LayoutTransform>
                                    </Label>
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Rounded color bar" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsColorBarRounded, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Color bar thickness  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconColorBar}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Color bar thickness" />
                                    <ComboBox Grid.Column="2" HorizontalAlignment="Right" FontSize="{Binding UIScaler.FontSize.Small}" ItemsSource="{Binding Source={StaticResource ThicknessDataProvider}}" SelectedItem="{Binding ApplicationViewModel.ApplicationSettings.ColorBarThickness, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource camelCaseConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </Border>

                        </StackPanel>

                        <!--  ===========================================================  -->
                        <!--  Task font settings  -->

                        <ToggleButton x:Name="taskFontSettingsBtn" Content="Task font settings" IsChecked="True" Style="{DynamicResource ClickableTextToggleButtonStyle}" />

                        <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=taskFontSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">

                            <!--  Task font size  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <DockPanel Style="{StaticResource SettingsDockPanelStyle}">
                                    <local:FontSizeSliderControl />
                                </DockPanel>
                            </Border>

                            <!--  Task font family  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconFontFamily}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Font family" />
                                    <ComboBox Grid.Column="2" HorizontalAlignment="Right" FontSize="{Binding UIScaler.FontSize.Small}" ItemsSource="{Binding Source={StaticResource FontFamilyDataProvider}}" SelectedItem="{Binding ApplicationViewModel.ApplicationSettings.FontFamily, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock FontFamily="{Binding Path=., Converter={StaticResource enumToFontFamilyConverter}}" Text="{Binding Converter={StaticResource camelCaseConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </Border>

                        </StackPanel>

                        <!--  ===========================================================  -->
                        <!--  Task quick actions  -->

                        <ToggleButton x:Name="taskQuickActionsSettingsBtn" Content="Task quick actions" IsChecked="True" Style="{DynamicResource ClickableTextToggleButtonStyle}" />

                        <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=taskQuickActionsSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">


                            <!--  Task Checkbox  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconCheckbox}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Checkbox" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsQuickActionsCheckboxEnabled, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Reminder button  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconDateTime}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Reminder button" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsQuickActionsReminderEnabled, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Marker color button  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconPalette}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Marker color picker" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsQuickActionsColorEnabled, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  BorderColor button  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconPalette}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Border color picker" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsQuickActionsBorderColorEnabled, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Pin button  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconPin}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Pin button" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsQuickActionsPinEnabled, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Delete button  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconTrash}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Delete button" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.IsQuickActionsTrashEnabled, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                        </StackPanel>

                        <!--  ===========================================================  -->
                        <!--  Note page settings  -->

                        <ToggleButton x:Name="notePageSettingsBtn" Content="Note page settings" IsChecked="True" Style="{DynamicResource ClickableTextToggleButtonStyle}" />

                        <StackPanel Orientation="Vertical" Visibility="{Binding ElementName=notePageSettingsBtn, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">


                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconWordWrap}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Word wrap" />
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding ApplicationViewModel.ApplicationSettings.NotePageWordWrap, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                                </Grid>
                            </Border>

                            <!--  Note page font family  -->
                            <Border Style="{StaticResource SettingsItemStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{DynamicResource SegoeIconFontFamily}" Style="{DynamicResource SettingsIconLabelStyle}" />
                                    <TextBlock Grid.Column="1" Style="{DynamicResource SettingsDescriptionStyle}" Text="Font family" />
                                    <ComboBox Grid.Column="2" HorizontalAlignment="Right" FontSize="{Binding UIScaler.FontSize.Small}" ItemsSource="{Binding Source={StaticResource FontFamilyDataProvider}}" SelectedItem="{Binding ApplicationViewModel.ApplicationSettings.NoteFontFamily, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock FontFamily="{Binding Path=., Converter={StaticResource enumToFontFamilyConverter}}" Text="{Binding Converter={StaticResource camelCaseConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </Border>

                        </StackPanel>


                        <!--  ===========================================================  -->
                        <!--  Text rendering settings  -->


                        <!--
                        <DockPanel Style="{StaticResource SettingsDockPanelStyle}" Margin="0 15 0 10">
                            <TextBlock Style="{DynamicResource SettingsDescriptionBoldStyle}" Text="Text rendering settings" />
                        </DockPanel>

                        <DockPanel Style="{StaticResource SettingsDockPanelStyle}">
                            <Label Style="{DynamicResource SettingsIconLabelStyle}" Content="{DynamicResource SegoeIconWordWrap}" />
                            <TextBlock Style="{DynamicResource SettingsDescriptionStyle}" Text="TextFormattingMode" />
                            <ToggleButton IsChecked="{Binding ApplicationViewModel.ApplicationSettings.TextFormattingMode, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                        </DockPanel>

                        <DockPanel Style="{StaticResource SettingsDockPanelStyle}">
                            <Label Style="{DynamicResource SettingsIconLabelStyle}" Content="{DynamicResource SegoeIconWordWrap}" />
                            <TextBlock Style="{DynamicResource SettingsDescriptionStyle}" Text="TextRenderingMode" />
                            <TextBox Text="{Binding ApplicationViewModel.ApplicationSettings.TextRenderingMode, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}"/>
                        </DockPanel>

                        <DockPanel Style="{StaticResource SettingsDockPanelStyle}">
                            <Label Style="{DynamicResource SettingsIconLabelStyle}" Content="{DynamicResource SegoeIconWordWrap}" />
                            <TextBlock Style="{DynamicResource SettingsDescriptionStyle}" Text="ClearTypeHint" />
                            <ToggleButton IsChecked="{Binding ApplicationViewModel.ApplicationSettings.ClearTypeHint, Source={x:Static local:ViewModelLocator.Instance}, Mode=TwoWay}" Style="{DynamicResource ToggleSideMenuStyle}" />
                        </DockPanel>-->


                        <!--  VERSION  -->
                        <DockPanel Margin="0 10 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="1" Style="{StaticResource SettingsItemStyle}">
                                    <TextBlock Margin="10 0 10 0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="{Binding UIScaler.FontSize.Medium}" Foreground="{DynamicResource ForegroundBrush}" Text="{StaticResource CurrentVersion}" />
                                </Border>
                            </Grid>
                        </DockPanel>


                    </StackPanel>
                </Border>
            </ScrollViewer>

        </Grid>
    </Border>
</local:BasePage>