<local:BasePage
    x:Class="TodoApp2.TaskPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:core="clr-namespace:TodoApp2.Core;assembly=TodoApp2.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TodoApp2"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="TaskPage" d:DesignHeight="480" d:DesignWidth="380"
    x:TypeArguments="core:TaskPageViewModel" mc:Ignorable="d">

    <Border Background="{DynamicResource ApplicationBackgroundBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>


            <Grid Grid.Row="0" Margin="5 10 5 10">
                <Grid
                    x:Name="CategoryNamePanel" Background="#00333333"
                    Margin="{Binding AppSettings.TaskPageSettings.TaskListMargin, Source={x:Static local:VML.Instance}, Converter={StaticResource taskPageTitleMarginConverter}}"
                    Style="{DynamicResource CurrentCategoryPanelStyle}">
                    <Grid.Visibility>
                        <MultiBinding>
                            <MultiBinding.Converter>
                                <local:BoolToVisibilityAndConverter />
                            </MultiBinding.Converter>
                            <Binding Path="AppSettings.PageTitleSettings.Visible" Source="{x:Static local:VML.Instance}" />
                            <Binding Mode="OneWay" Path="IsCategoryInDisplayMode" UpdateSourceTrigger="PropertyChanged" />
                        </MultiBinding>
                    </Grid.Visibility>

                    <!--<Grid.ContextMenu>
                        <ContextMenu>
                            --><!--
                                Command="{Binding Path=PlacementTarget.Tag.MoveToTopCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                
                                
                                Command="{Binding SwitchToPageCommand}"
                                CommandParameter="{x:Static core:ApplicationPage.ThemeSettings}"
                            --><!--
                            <MenuItem Header="Open page title settings" Icon="{StaticResource ctxIconMoveToTop}" />
                        </ContextMenu>
                    </Grid.ContextMenu>-->

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  CURRENT CATEGORY DISPLAY TEXT  -->
                        <TextBlock
                            Grid.Column="0"
                            Style="{DynamicResource PageTitleTextBlockStyle}"
                            Margin="0 1"
                            Text="{Binding CategoryListService.ActiveCategoryName, Source={x:Static local:VML.Instance}}"
                            Foreground="{DynamicResource Primary}"
                            FontFamily="{Binding Path=AppSettings.PageTitleSettings.FontFamily, Source={x:Static local:VML.Instance}, Converter={StaticResource enumToFontFamilyConverter}}"
                            FontSize="{Binding AppSettings.PageTitleSettings.FontSize, Source={x:Static local:VML.Instance}, Converter={StaticResource fontSizeScaler}}"
                            HorizontalAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={x:Static local:VML.Instance}, Converter={StaticResource horizontalAlignmentConverter}}">
                            <TextBlock.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <local:BoolToVisibilityAndConverter />
                                    </MultiBinding.Converter>
                                    <Binding Path="AppSettings.PageTitleSettings.Visible" Source="{x:Static local:VML.Instance}" />
                                    <Binding Mode="OneWay" Path="IsCategoryInDisplayMode" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Visibility>
                        </TextBlock>
                    </Grid>

                    <Button
                        Visibility="{Binding ElementName=CategoryNamePanel, Path=Tag, Converter={StaticResource boolToVisibilityConverter}}"
                        Command="{Binding EditCategoryCommand}"
                        Content="{DynamicResource SegoeIconEdit}"
                        Style="{DynamicResource ButtonIconHoverRectangleStyle}"
                        ToolTip="Edit category name" Margin="0 2"
                        HorizontalAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={x:Static local:VML.Instance}, Converter={StaticResource horizontalAlignmentInvertedConverter}}" />
                </Grid>

                <!--  CURRENT CATEGORY EDITOR TEXTBOX  -->
                <Border Margin="{Binding AppSettings.TaskPageSettings.TaskListMargin, Source={x:Static local:VML.Instance}, Converter={StaticResource taskPageTitleMarginConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <local:SubmitEscapeTextBox
                            Grid.Column="0" Margin="-2 0 -2 0" Padding="-1 0 -1 0"
                            Style="{DynamicResource PageTitleEditorTextBoxStyle}"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource Tertiary}"
                            Text="{Binding RenameCategoryContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Foreground="{DynamicResource Secondary}"
                            FontFamily="{Binding Path=AppSettings.PageTitleSettings.FontFamily, Source={x:Static local:VML.Instance}, Converter={StaticResource enumToFontFamilyConverter}}"
                            FontSize="{Binding AppSettings.PageTitleSettings.FontSize, Source={x:Static local:VML.Instance}, Converter={StaticResource fontSizeScaler}}"
                            EscapePressedCommand="{Binding FinishCategoryEditCommand}"
                            EnterPressedCommand="{Binding FinishCategoryEditCommand}"
                            HorizontalContentAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={x:Static local:VML.Instance}, Converter={StaticResource horizontalAlignmentConverter}}">

                            <TextBox.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <local:BoolToVisibilityAndConverter />
                                    </MultiBinding.Converter>
                                    <Binding Path="AppSettings.PageTitleSettings.Visible" Source="{x:Static local:VML.Instance}" />
                                    <Binding Mode="OneWay" Path="IsCategoryInEditMode" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBox.Visibility>

                            <!--<Behaviors:Interaction.Triggers>
                                <Behaviors:EventTrigger EventName="LostFocus">
                                    <Behaviors:InvokeCommandAction Command="{Binding FinishCategoryEditCommand}" />
                                </Behaviors:EventTrigger>
                            </Behaviors:Interaction.Triggers>-->

                            <TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{Binding FinishCategoryEditCommand}" />
                            </TextBox.InputBindings>
                        </local:SubmitEscapeTextBox>

                    </Grid>

                </Border>

                <Button
                    Visibility="{Binding IsCategoryInEditMode, Converter={StaticResource boolToVisibilityConverter}}"
                    Command="{Binding FinishCategoryEditCommand}"
                    Content="{DynamicResource SegoeIconSave}"
                    Style="{DynamicResource ButtonIconHoverRectangleStyle}"
                    ToolTip="Save category name" Margin="15 2"
                    HorizontalAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={x:Static local:VML.Instance}, Converter={StaticResource horizontalAlignmentInvertedConverter}}" />

            </Grid>


            <!--  border to catch double click event  -->
            <!--<Border
                Grid.Row="0"
                Background="Transparent"
                Visibility="{Binding IsCategoryInEditMode, Converter={StaticResource boolToVisibilityNegatedConverter}}">
                <Border.InputBindings>
                    <MouseBinding Command="{Binding EditCategoryCommand}" Gesture="LeftClick" />
                </Border.InputBindings>
            </Border>-->

            <!--  Task list  -->
            <local:TaskListControl x:Name="MyTaskListControl" Grid.Row="1" />

            <!--  Bottom panel  -->
            <Border x:Name="BottomBorderPanel" Grid.Row="2">
                <DockPanel>
                    <Border Background="{DynamicResource Surface1}" CornerRadius="6" Margin="5">
                        <local:RichTextEditorControl
                            x:Name="BottomTextEditor"
                            MaxHeight="{Binding UIScaler.TextBoxMaxHeight}"
                            Padding="3 8" VerticalAlignment="Bottom"
                            DataContext="{Binding TextEditorViewModel}">

                            <Behaviors:Interaction.Triggers>
                                <Behaviors:EventTrigger EventName="GotFocus">
                                    <Behaviors:InvokeCommandAction Command="{Binding DataContext.TextBoxFocusedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DockPanel}}" />
                                </Behaviors:EventTrigger>
                            </Behaviors:Interaction.Triggers>

                        </local:RichTextEditorControl>
                    </Border>

                </DockPanel>

            </Border>
        </Grid>
    </Border>
</local:BasePage>