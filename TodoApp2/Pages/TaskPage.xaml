<local:BasePage
    x:Class="TodoApp2.TaskPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:core="clr-namespace:TodoApp2.Core;assembly=TodoApp2.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TodoApp2"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="TaskPage"
    d:DesignHeight="480"
    d:DesignWidth="380"
    x:TypeArguments="core:TaskPageViewModel"
    mc:Ignorable="d">

    <Border Background="{DynamicResource ApplicationBackgroundBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <!--  Category name  -->
                <RowDefinition Height="Auto" />

                <!--  Task list  -->
                <RowDefinition Height="*" />

                <!--  Progress bar  -->
                <RowDefinition Height="Auto" />

                <!--  GridSplitter  -->
                <RowDefinition Height="5" />

                <!--  Add new task panel  -->
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>


            <Grid
                Grid.Row="0"
                Margin="5 0"
                Visibility="{Binding AppSettings.PageTitleSettings.Visible, Source={StaticResource AppSettings}, Converter={StaticResource boolToVisibilityConverter}}">
                <Grid
                    x:Name="CategoryNamePanel"
                    Margin="{Binding AppSettings.TaskPageSettings.TaskListMargin, Source={StaticResource AppSettings}, Converter={StaticResource taskPageTitleMarginConverter}}"
                    Background="#00333333"
                    Style="{DynamicResource CurrentCategoryPanelStyle}">
                    <Grid.Visibility>
                        <MultiBinding>
                            <MultiBinding.Converter>
                                <local:BoolToVisibilityAndConverter />
                            </MultiBinding.Converter>
                            <Binding Path="AppSettings.PageTitleSettings.Visible" Source="{StaticResource AppSettings}" />
                            <Binding
                                Mode="OneWay"
                                Path="IsCategoryInDisplayMode"
                                UpdateSourceTrigger="PropertyChanged" />
                        </MultiBinding>
                    </Grid.Visibility>

                    <!--<Grid.ContextMenu>
                        <ContextMenu>
                    -->
                    <!--
                        Command="{Binding Path=PlacementTarget.Tag.MoveToTopCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                        CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                        
                        
                        Command="{Binding SwitchToPageCommand}"
                        CommandParameter="{x:Static core:ApplicationPage.ThemeSettings}"
                    -->
                    <!--
                            <MenuItem Header="Open page title settings" Icon="{StaticResource ctxIconMoveToTop}" />
                        </ContextMenu>
                    </Grid.ContextMenu>-->

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  CURRENT CATEGORY DISPLAY TEXT  -->
                        <TextBlock
                            Grid.Column="0"
                            Margin="0 1"
                            HorizontalAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={StaticResource AppSettings}, Converter={StaticResource horizontalAlignmentConverter}}"
                            FontFamily="{Binding AppSettings.PageTitleSettings.FontFamily, Source={StaticResource AppSettings}, Converter={StaticResource enumToFontFamilyConverter}}"
                            FontSize="{Binding AppSettings.PageTitleSettings.FontSize, Source={StaticResource AppSettings}, Converter={StaticResource fontSizeScaler}}"
                            Foreground="{DynamicResource Primary}"
                            Style="{DynamicResource PageTitleTextBlockStyle}"
                            Text="{Binding CategoryListService.ActiveCategoryName, Source={x:Static local:VML.Instance}}">
                            <TextBlock.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <local:BoolToVisibilityAndConverter />
                                    </MultiBinding.Converter>
                                    <Binding Path="AppSettings.PageTitleSettings.Visible" Source="{StaticResource AppSettings}" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="IsCategoryInDisplayMode"
                                        UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Visibility>
                        </TextBlock>
                    </Grid>

                    <Button
                        Margin="0 2"
                        HorizontalAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={StaticResource AppSettings}, Converter={StaticResource horizontalAlignmentInvertedConverter}}"
                        Command="{Binding EditCategoryCommand}"
                        Content="{DynamicResource SegoeIconEdit}"
                        Style="{DynamicResource ButtonIconHoverRectangleStyle}"
                        ToolTip="Edit category name"
                        Visibility="{Binding ElementName=CategoryNamePanel, Path=Tag, Converter={StaticResource boolToVisibilityConverter}}" />
                </Grid>

                <!--  CURRENT CATEGORY EDITOR TEXTBOX  -->
                <Border Margin="{Binding AppSettings.TaskPageSettings.TaskListMargin, Source={StaticResource AppSettings}, Converter={StaticResource taskPageTitleMarginConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <local:SubmitEscapeTextBox
                            Grid.Column="0"
                            Margin="-2 0 -2 0"
                            Padding="-1 0 -1 0"
                            HorizontalContentAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={StaticResource AppSettings}, Converter={StaticResource horizontalAlignmentConverter}}"
                            BorderBrush="{DynamicResource Tertiary}"
                            BorderThickness="1"
                            EnterPressedCommand="{Binding FinishCategoryEditCommand}"
                            EscapePressedCommand="{Binding FinishCategoryEditCommand}"
                            FontFamily="{Binding AppSettings.PageTitleSettings.FontFamily, Source={StaticResource AppSettings}, Converter={StaticResource enumToFontFamilyConverter}}"
                            FontSize="{Binding AppSettings.PageTitleSettings.FontSize, Source={StaticResource AppSettings}, Converter={StaticResource fontSizeScaler}}"
                            Foreground="{DynamicResource Secondary}"
                            Style="{DynamicResource PageTitleEditorTextBoxStyle}"
                            Text="{Binding RenameCategoryContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                            <TextBox.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <local:BoolToVisibilityAndConverter />
                                    </MultiBinding.Converter>
                                    <Binding Path="AppSettings.PageTitleSettings.Visible" Source="{StaticResource AppSettings}" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="IsCategoryInEditMode"
                                        UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBox.Visibility>

                            <!--<Behaviors:Interaction.Triggers>
                                <Behaviors:EventTrigger EventName="LostFocus">
                                    <Behaviors:InvokeCommandAction Command="{Binding FinishCategoryEditCommand}" />
                                </Behaviors:EventTrigger>
                            </Behaviors:Interaction.Triggers>-->

                            <TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{Binding FinishCategoryEditCommand}" />
                            </TextBox.InputBindings>
                        </local:SubmitEscapeTextBox>

                    </Grid>

                </Border>

                <Button
                    Margin="15 2"
                    HorizontalAlignment="{Binding AppSettings.PageTitleSettings.HorizontalAlignment, Source={StaticResource AppSettings}, Converter={StaticResource horizontalAlignmentInvertedConverter}}"
                    Command="{Binding FinishCategoryEditCommand}"
                    Content="{DynamicResource SegoeIconSave}"
                    Style="{DynamicResource ButtonIconHoverRectangleStyle}"
                    ToolTip="Save category name"
                    Visibility="{Binding IsCategoryInEditMode, Converter={StaticResource boolToVisibilityConverter}}" />

            </Grid>


            <!--  border to catch double click event  -->
            <!--<Border
                Grid.Row="0"
                Background="Transparent"
                Visibility="{Binding IsCategoryInEditMode, Converter={StaticResource boolToVisibilityNegatedConverter}}">
                <Border.InputBindings>
                    <MouseBinding Command="{Binding EditCategoryCommand}" Gesture="LeftClick" />
                </Border.InputBindings>
            </Border>-->

            <!--  Task list  -->
            <local:TaskListControl x:Name="MyTaskListControl" Grid.Row="1" />

            <!--  Progress bar  -->
            <Grid Grid.Row="2" Margin="{Binding AppSettings.TaskPageSettings.TaskListMargin, Source={StaticResource AppSettings}, Converter={StaticResource taskListItemMarginConverter}}">
                <Border Margin="4 0">
                    <local:TaskProgressBar
                        MaxProgress="{Binding TaskListService.ActiveCategoryItemCount, Source={x:Static local:VML.Instance}, UpdateSourceTrigger=PropertyChanged}"
                        NumbersVisible="{Binding AppSettings.TaskPageSettings.NumberOnProgressBar, Source={StaticResource AppSettings}}"
                        Progress="{Binding TaskListService.ActiveCategoryFinishedTaskCount, Source={x:Static local:VML.Instance}, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding AppSettings.TaskPageSettings.ProgressBar, Source={StaticResource AppSettings}, Converter={StaticResource boolToVisibilityConverter}}" />
                </Border>

            </Grid>

            <Border
                Grid.Row="3"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{DynamicResource Primary}"
                Opacity="0"
                Tag="{Binding IsBottomPanelOpen}">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.3"
                                                Duration="0:0:0.5" />
                                            <DoubleAnimation
                                                BeginTime="0:0:0.5"
                                                Storyboard.TargetProperty="Opacity"
                                                From="0.3"
                                                To="0.7"
                                                Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <DataTrigger Binding="{Binding IsBottomPanelOpen}" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="ToolTip" Value="Hide" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsBottomPanelOpen}" Value="False">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="ToolTip" Value="Show" />
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Behaviors:Interaction.Triggers>
                    <Behaviors:EventTrigger EventName="MouseLeftButtonDown">
                        <Behaviors:InvokeCommandAction Command="{Binding ToggleBottomPanelOpenState}" />
                    </Behaviors:EventTrigger>
                </Behaviors:Interaction.Triggers>

                <Viewbox Width="10" Height="10">
                    <Path
                        Data="M -1 1 L 11 1 M 0 0 Z"
                        Stroke="{DynamicResource OnSurface}"
                        StrokeThickness="0.8" />
                </Viewbox>

            </Border>

            <!--  Bottom panel  -->
            <Border
                x:Name="BottomBorderPanel"
                Grid.Row="4"
                Visibility="{Binding IsBottomPanelOpen, Converter={StaticResource boolToVisibilityConverter}}">
                <Border
                    Grid.Row="1"
                    Margin="5 0 5 5"
                    Background="{DynamicResource Surface1}"
                    CornerRadius="6">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <local:RichTextEditorControl
                            x:Name="BottomTextEditor"
                            Grid.Row="0"
                            MaxHeight="{Binding UIScaler.TextBoxMaxHeight, Source={StaticResource UIScaler}}"
                            Padding="3 8"
                            VerticalAlignment="Bottom"
                            DataContext="{Binding TextEditorViewModel}">

                            <Behaviors:Interaction.Triggers>
                                <Behaviors:EventTrigger EventName="GotFocus">
                                    <Behaviors:InvokeCommandAction Command="{Binding DataContext.TextBoxFocusedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DockPanel}}" />
                                </Behaviors:EventTrigger>
                            </Behaviors:Interaction.Triggers>

                        </local:RichTextEditorControl>

                        <Border Grid.Row="1" Visibility="{Binding AppSettings.TaskPageSettings.SendButtonVisible, Source={StaticResource AppSettings}, Converter={StaticResource boolToVisibilityConverter}}">
                            <Button
                                Padding="5"
                                HorizontalAlignment="Right"
                                Background="{DynamicResource Surface3}"
                                Command="{Binding AddTaskItemCommand}"
                                Content="{StaticResource SegoeIconSend}"
                                Cursor="Hand"
                                Style="{StaticResource ButtonIconHoverStyle}"
                                ToolTip="Add task"
                                Visibility="{Binding TextEditorViewModel.IsContentEmpty, Converter={StaticResource boolToVisibilityNegatedConverter}}" />
                        </Border>
                    </Grid>
                </Border>


            </Border>
        </Grid>
    </Border>
</local:BasePage>